// Code generated by mockery v1.0.0. DO NOT EDIT.

package chartmuseum

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Controller is an autogenerated mock type for the Controller type
type Controller struct {
	mock.Mock
}

// Count provides a mock function with given fields: ctx, projectID
func (_m *Controller) Count(ctx context.Context, projectID int64) (int64, error) {
	ret := _m.Called(ctx, projectID)

	var r0 int64
	if rf, ok := ret.Get(0).(func(context.Context, int64) int64); ok {
		r0 = rf(ctx, projectID)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(ctx, projectID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Exist provides a mock function with given fields: ctx, projectID, chartName, version
func (_m *Controller) Exist(ctx context.Context, projectID int64, chartName string, version string) (bool, error) {
	ret := _m.Called(ctx, projectID, chartName, version)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, int64, string, string) bool); ok {
		r0 = rf(ctx, projectID, chartName, version)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64, string, string) error); ok {
		r1 = rf(ctx, projectID, chartName, version)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
